require(tidyverse)
require(sCPUEdb)
require(RPostgreSQL)
#create connection to pelagic
con = connectPelagic(dbuser = "brendan", dbpass = "SharkSanct")
#full dataset
fulldat = selectData(con, "select * from \"hawaiiObs\" where \"DEPART_YEAR\" between 2010 and 2017")
fulldat$long <- rowMeans(fulldat[,c("SET_BEGIN_LON","SET_END_LON", "HAUL_BEGIN_LON", "HAUL_END_LON")], na.rm=T)
fulldat$lat <- rowMeans(fulldat[,c("SET_BEGIN_LAT","SET_END_LAT", "HAUL_BEGIN_LAT", "HAUL_END_LAT")], na.rm=T)
fulldat$NUM_HKS_SET <- fulldat$NUM_HKS_SET %>% gsub('[[:punct:]]', '', .) # remove Punctuations
fulldat$NUM_HKS_SET <- as.numeric(fulldat$NUM_HKS_SET)
#GLMs
library(MASS)
library(pscl)
model.blueshark <- glm.nb(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
data=fulldat)
summary(model.blueshark)
Anova(model.blueshark)
library(car)
Anova(model.blueshark)
plot(model.blueshark)
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
model.blueshark <- zeroinfl(COUNT_BLUE_SHARK~lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)), data=fulldat)
summary(model.blueshark)
Anova(model.blueshark)
plot(model.blueshark)
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
library(EnvStats)
rosnerTest(fulldat$COUNT_BLUE_SHARK)
rosnerTest(fulldat$COUNT_BLUE_SHARK, k=5)
rosnerTest(fulldat$COUNT_BLUE_SHARK, k=100)
rosnerTest(fulldat$COUNT_BLUE_SHARK, k=10)
model.blueshark <- glm.nb(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
data=fulldat)
dropterm(model.blueshark)
summary(model.blueshark)
model.blueshark <- glm.(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
data=fulldat, family=inverse.gaussian)
model.blueshark <- glm(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
data=fulldat, family=inverse.gaussian)
str(fulldat$long)
View(fulldat)
model.silkyshark <- glm.nb(COUNT_SILKY_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
data=fulldat)
summary(model.silkyshark)
Anova(model.silkyshark)
plot(model.silkyshark)
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
(pseudo_rsq_silkyshark <- 1 - model.silkyshark$deviance / model.silkyshark$null.deviance)
dropterm(model.blueshark)
dropterm(model.silkyshark)
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR")),
observed = COUNT_BLUE_SHARK/NUM_HKS_SET, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR")),
observed = fulldat$COUNT_BLUE_SHARK/fulldat$NUM_HKS_SET, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
View(pred)
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR")),
observed = fulldat$COUNT_BLUE_SHARK, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
View(fulldat)
View(pred)
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET")),
observed = fulldat$COUNT_BLUE_SHARK, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
View(pred)
install.packages("fishMod")
library(fishMod)
model.blueshark.DL <- deltaLN(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
~ lat + long + DEPART_YEAR, fulldat)
plot(model.blueshark.DL$fitted, model.blueshark.DL$residuals[,"quantile"], pch=20, main="Delta Log-Normal quantile residuals")
abline( h=0, col="red")
pred2 <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET")),
observed = fulldat$COUNT_BLUE_SHARK, predicted = predict(model.blueshark.DL, type = "response", se.fit=TRUE))
model.blueshark.DL <- deltaLN(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(NUM_HKS_SET),
~ lat + long + DEPART_YEAR, fulldat)
plot(model.blueshark.DL$fitted, model.blueshark.DL$residuals[,"quantile"], pch=20, main="Delta Log-Normal quantile residuals")
log(
model.blueshark.DL <- deltaLN(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log(NUM_HKS_SET)),
~ lat + long + DEPART_YEAR, fulldat)
plot(model.blueshark.DL$fitted, model.blueshark.DL$residuals[,"quantile"], pch=20, main="Delta Log-Normal quantile residuals")
abline( h=0, col="red")
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
View(pred)
pred$truepredict = exp(predicted.fit)
pred$truepredict = exp(pred$predicted.fit)
View(pred)
View(fulldat)
dummy <-
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET"))#,
observed = fulldat$COUNT_BLUE_SHARK, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
dummy <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET")))
View(dummy)
dummy$NUM_HKS_SET=1000
pred <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET")),
observed = fulldat$COUNT_BLUE_SHARK, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
View(pred)
pred$truepredict = exp(pred$predicted.fit)
View(pred)
pred <- data.frame(dummy, predicted = predict(model.blueshark, type = "response", se.fit=TRUE))
View(pred)
pred <- predict(model.blueshark, newdata=dummy, type = "response", se.fit=TRUE)
View(pred)
print(pred$fit)
print(exp(pred$fit))
pred <- data.frame(dummy, predicted=predict(model.blueshark, newdata=dummy, type = "response", se.fit=TRUE))
View(pred)
pred$truepredict = exp(pred$fit)
View(pred)
pred$truepredict = exp(pred$predicted.fit)
View(pred)
fulldat$log_NUM_HKS_SET=log(fulldat$NUM)
fulldat$log_hooks=log(fulldat$NUM_HKS_SET)
model.blueshark <- glm.nb(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log_hooks),
data=fulldat)
summary(model.blueshark)
Anova(model.blueshark)
plot(model.blueshark)
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
dummy <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "NUM_HKS_SET")))
dummy$NUM_HKS_SET=log(1000)
pred <- data.frame(dummy, predicted=predict(model.blueshark, newdata=dummy, type = "response", se.fit=TRUE))
dummy <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "log_hooks")))
dummy$log_hooks=log(1000)
pred <- data.frame(dummy, predicted=predict(model.blueshark, newdata=dummy, type = "response", se.fit=TRUE))
View(pred)
pred$truepredict = exp(pred$predicted.fit)
View(pred)
mean(pred$truepredict)
model.blueshark <- glm.nb(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log_hooks),
data=fulldat)
summary(model.blueshark)
Anova(model.blueshark)
plot(model.blueshark)
require(tidyverse)
####full dataset####
#fulldat = selectData(con, "select * from \"hawaiiObs\" where \"DEPART_YEAR\" between 2010 and 2017")
#dupedat <- fulldat
#write.csv(dupedat, "~/Desktop/Ongoing Projects/GFW Shark Sanctuary/working_dir/fulldat.csv")
fulldat <- read.csv("~/Desktop/Ongoing Projects/GFW Shark Sanctuary/working_dir/fulldat.csv")
####data structure####
fulldat$long <- rowMeans(fulldat[,c("SET_BEGIN_LON","SET_END_LON", "HAUL_BEGIN_LON", "HAUL_END_LON")], na.rm=T)
fulldat$lat <- rowMeans(fulldat[,c("SET_BEGIN_LAT","SET_END_LAT", "HAUL_BEGIN_LAT", "HAUL_END_LAT")], na.rm=T)
fulldat$NUM_HKS_SET <- fulldat$NUM_HKS_SET %>% gsub('[[:punct:]]', '', .) # remove Punctuations
fulldat$NUM_HKS_SET <- as.numeric(fulldat$NUM_HKS_SET)
####GLMs####
library(MASS)
library(pscl)
library(car)
fulldat$log_hooks=log(fulldat$NUM_HKS_SET)
fulldat<- fulldat %>% distinct()
#dataset for predictions
dummy <- data.frame(subset(fulldat, select = c("lat", "long", "DEPART_YEAR", "log_hooks")))
dummy$log_hooks=log(1000)
#Blue shark
{
model.blueshark <- glm.nb(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR + offset(log_hooks),
data=fulldat)
summary(model.blueshark)
Anova(model.blueshark)
plot(model.blueshark)
(pseudo_rsq_blueshark <- 1 - model.blueshark$deviance / model.blueshark$null.deviance)
pred.blueshark <- data.frame(dummy, predicted=predict(model.blueshark, newdata=dummy, type = "response", se.fit=TRUE))
model.blueshark2 <-
pred.blueshark2 <- data.frame(dummy, predicted=predict(model.blueshark, newdata=dummy, type = "link", se.fit=TRUE))
}
View(pred.blueshark)
Anova(model.blueshark)
anova(model.blueshark)
?zeroinfl
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHAWK ~ lat + long + DEPART_YEAR |NUM_HKS_SET,
data=fulldat, dist="negbin")
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR |NUM_HKS_SET,
data=fulldat, dist="negbin")
summary(model.blueshark2)
pred.blueshark2 <- data.frame(dummy, predicted=predict(model.blueshark2, newdata=dummy, type = "link", se.fit=TRUE))
pred.blueshark2 <- data.frame(dummy, predicted=predict(model.blueshark2, newdata=dummy, type = "response", se.fit=TRUE))
dummy$NUM_HKS_SET=1000
pred.blueshark2 <- data.frame(dummy, predicted=predict(model.blueshark2, newdata=dummy, type = "response", se.fit=TRUE))
View(pred.blueshark2)
vuong(model.blueshark,model.blueshark2)
summary(model.blueshark2)
summary(model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long | DEPART_YEAR, offset = log_hooks,
data=fulldat, dist="negbin")
summary(model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long | DEPART_YEAR, offset = NUM_HKS_SET,
data=fulldat, dist="negbin")
View(fulldat)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + DEPART_YEAR | long, offset = log_hooks,
data=fulldat, dist="negbin")
summary(model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR | DEPART_MONTH, offset = log_hooks,
data=fulldat, dist="negbin")
summary(model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR | lat + long + DEPART_YEAR, offset = log_hooks,
data=fulldat, dist="negbin")
summary(model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long | lat + long, offset = log_hooks,
data=fulldat, dist="negbin")
summary(model.blueshark2)
vuong(model.blueshark,model.blueshark2)
model.blueshark2 <- zeroinfl(COUNT_BLUE_SHARK ~ lat + long + DEPART_YEAR | lat + long + DEPART_YEAR, offset = log_hooks,
data=fulldat, dist="negbin")
vuong(model.blueshark,model.blueshark2)
model.bigeyethresher <- glm.nb(COUNT_BIGEYE_THRESHER_SHARK ~ lat + long + DEPART_YEAR + offset(log_hooks),
data=fulldat)
model.bigeyethresher2 <- zeroinfl(COUNT_BIGEYE_THRESHER_SHARK ~ lat + long + DEPART_YEAR | lat + long + DEPART_YEAR, offset = log_hooks,
data=fulldat, dist="negbin")
model.bigeyethresher <- glm.nb(COUNT_BIGEYE_THRESHER_SHARK ~ lat + long + DEPART_YEAR + offset(log_hooks),
data=fulldat)
summary(model.bigeyethresher)
pred.bigeyethresher <- data.frame(dummy, predicted=predict(model.bigeyethresher, newdata=dummy, type = "response", se.fit=TRUE))
View(pred.bigeyethresher)
